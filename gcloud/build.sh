#! /bin/bash

set -e
ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $ROOT_DIR
source ../config.sh

# Core Server - fcrepo
docker pull $UCD_LIB_DOCKER_ORG/$FCREPO_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CORE_SERVER_REPO_HASH=${CORE_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$FCREPO_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$FCREPO_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CORE_SERVER_REPO_NAME/fcrepo
docker tag $UCD_LIB_DOCKER_ORG/$FCREPO_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$FCREPO_IMAGE_NAME:$DOCKER_CACHE_TAG

# Core Server - postgres
docker pull $UCD_LIB_DOCKER_ORG/$POSTGRES_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CORE_SERVER_REPO_HASH=${CORE_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$POSTGRES_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$POSTGRES_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CORE_SERVER_REPO_NAME/postgres
docker tag $UCD_LIB_DOCKER_ORG/$POSTGRES_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$POSTGRES_IMAGE_NAME:$DOCKER_CACHE_TAG

# Core Server - fin node utils
docker pull $UCD_LIB_DOCKER_ORG/$NODE_UTILS_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  -t $UCD_LIB_DOCKER_ORG/$NODE_UTILS_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$NODE_UTILS_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CORE_SERVER_REPO_NAME/node-utils
docker tag $UCD_LIB_DOCKER_ORG/$NODE_UTILS_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$NODE_UTILS_IMAGE_NAME:$DOCKER_CACHE_TAG

# Core Server - server
docker pull $UCD_LIB_DOCKER_ORG/$SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CORE_SERVER_REPO_HASH=${CORE_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$SERVER_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CORE_SERVER_REPO_NAME/server
docker tag $UCD_LIB_DOCKER_ORG/$SERVER_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG

# Core Server - trusted proxy
docker pull $UCD_LIB_DOCKER_ORG/$TRUSTED_PROXY_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CORE_SERVER_REPO_HASH=${CORE_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$TRUSTED_PROXY_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$TRUSTED_PROXY_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CORE_SERVER_REPO_NAME/trusted-proxy
docker tag $UCD_LIB_DOCKER_ORG/$TRUSTED_PROXY_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$TRUSTED_PROXY_IMAGE_NAME:$DOCKER_CACHE_TAG

UCD_LIB_SERVER_REPO_HASH=$(git -C $REPOSITORY_DIR/$UCD_LIB_SERVER_REPO_NAME log -1 --pretty=%h)

# UCD Library Server - elastic search
docker pull $UCD_LIB_DOCKER_ORG/$ELASTIC_SEARCH_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg UCD_LIB_SERVER_REPO_TAG=${UCD_LIB_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_HASH=${UCD_LIB_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$ELASTIC_SEARCH_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$ELASTIC_SEARCH_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$UCD_LIB_SERVER_REPO_NAME/elastic-search
docker tag $UCD_LIB_DOCKER_ORG/$ELASTIC_SEARCH_IMAGE_NAME:$CORE_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$ELASTIC_SEARCH_IMAGE_NAME:$DOCKER_CACHE_TAG

# UCD Library Server - server
docker pull $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_TAG=${UCD_LIB_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_HASH=${UCD_LIB_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$UCD_LIB_SERVER_REPO_NAME/server
docker tag $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMAGE_NAME:$DOCKER_CACHE_TAG

# UCD Library Server - essync
docker pull $UCD_LIB_DOCKER_ORG/$ESSYNC_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_TAG=${UCD_LIB_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_HASH=${UCD_LIB_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$ESSYNC_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$ESSYNC_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$UCD_LIB_SERVER_REPO_NAME/services/essync
docker tag $UCD_LIB_DOCKER_ORG/$ESSYNC_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$ESSYNC_IMAGE_NAME:$DOCKER_CACHE_TAG

# UCD Library Server - ucd-lib-client
docker pull $UCD_LIB_DOCKER_ORG/$UCD_LIB_CLIENT_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_TAG=${UCD_LIB_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_HASH=${UCD_LIB_SERVER_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$UCD_LIB_CLIENT_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$UCD_LIB_CLIENT_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$UCD_LIB_SERVER_REPO_NAME/services/ucd-lib-client
docker tag $UCD_LIB_DOCKER_ORG/$UCD_LIB_CLIENT_IMAGE_NAME:$UCD_LIB_SERVER_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$UCD_LIB_CLIENT_IMAGE_NAME:$DOCKER_CACHE_TAG

# Loris Service
LORIS_SERVICE_REPO_HASH=$(git -C $REPOSITORY_DIR/$LORIS_SERVICE_REPO_NAME log -1 --pretty=%h)
docker pull $UCD_LIB_DOCKER_ORG/$LORIS_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg LORIS_SERVICE_REPO_TAG=${LORIS_SERVICE_REPO_TAG} \
  --build-arg LORIS_SERVICE_REPO_HASH=${LORIS_SERVICE_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$LORIS_IMAGE_NAME:$LORIS_SERVICE_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$LORIS_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$LORIS_SERVICE_REPO_NAME
docker tag $UCD_LIB_DOCKER_ORG/$LORIS_IMAGE_NAME:$LORIS_SERVICE_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$LORIS_IMAGE_NAME:$DOCKER_CACHE_TAG

# Tesseract Service
TESSERACT_SERVICE_REPO_HASH=$(git -C $REPOSITORY_DIR/$TESSERACT_SERVICE_REPO_NAME log -1 --pretty=%h)
docker pull $UCD_LIB_DOCKER_ORG/$TESSERACT_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg TESSERACT_SERVICE_REPO_TAG=${TESSERACT_SERVICE_REPO_TAG} \
  --build-arg TESSERACT_SERVICE_REPO_HASH=${TESSERACT_SERVICE_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$TESSERACT_IMAGE_NAME:$TESSERACT_SERVICE_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$TESSERACT_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$TESSERACT_SERVICE_REPO_NAME
docker tag $UCD_LIB_DOCKER_ORG/$TESSERACT_IMAGE_NAME:$TESSERACT_SERVICE_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$TESSERACT_IMAGE_NAME:$DOCKER_CACHE_TAG

# CAS Service
CAS_SERVICE_REPO_HASH=$(git -C $REPOSITORY_DIR/$CAS_SERVICE_REPO_NAME log -1 --pretty=%h)
docker pull $UCD_LIB_DOCKER_ORG/$CAS_IMAGE_NAME:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CAS_SERVICE_REPO_TAG=${CAS_SERVICE_REPO_TAG} \
  --build-arg CAS_SERVICE_REPO_HASH=${CAS_SERVICE_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$CAS_IMAGE_NAME:$CAS_SERVICE_REPO_TAG \
  --cache-from $UCD_LIB_DOCKER_ORG/$CAS_IMAGE_NAME:$DOCKER_CACHE_TAG \
  $REPOSITORY_DIR/$CAS_SERVICE_REPO_NAME
docker tag $UCD_LIB_DOCKER_ORG/$CAS_IMAGE_NAME:$CAS_SERVICE_REPO_TAG \
  $UCD_LIB_DOCKER_ORG/$CAS_IMAGE_NAME:$DOCKER_CACHE_TAG

# UCD Library Server Impl
docker pull $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMPL:$DOCKER_CACHE_TAG || true
docker build \
  --build-arg APP_VERSION=${APP_VERSION} \
  --build-arg CORE_SERVER_REPO_TAG=${CORE_SERVER_REPO_TAG} \
  --build-arg CORE_SERVER_REPO_HASH=${CORE_SERVER_REPO_HASH} \
  --build-arg UCD_LIB_SERVER_REPO_TAG=${UCD_LIB_SERVER_REPO_TAG} \
  --build-arg UCD_LIB_SERVER_REPO_HASH=${UCD_LIB_SERVER_REPO_HASH} \
  --build-arg LORIS_SERVICE_REPO_TAG=${LORIS_SERVICE_REPO_TAG} \
  --build-arg LORIS_SERVICE_REPO_HASH=${LORIS_SERVICE_REPO_HASH} \
  --build-arg TESSERACT_SERVICE_REPO_TAG=${TESSERACT_SERVICE_REPO_TAG} \
  --build-arg TESSERACT_SERVICE_REPO_HASH=${TESSERACT_SERVICE_REPO_HASH} \
  --build-arg CAS_SERVICE_REPO_TAG=${CAS_SERVICE_REPO_TAG} \
  --build-arg CAS_SERVICE_REPO_HASH=${CAS_SERVICE_REPO_HASH} \
  -t $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMPL:$APP_VERSION \
  --cache-from $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMPL:$DOCKER_CACHE_TAG \
  ../ucd-lib-server-impl
docker tag $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMPL:$APP_VERSION \
  $UCD_LIB_DOCKER_ORG/$UCD_LIB_SERVER_IMPL:$DOCKER_CACHE_TAG